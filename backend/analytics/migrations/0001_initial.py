# Generated by Django 5.2.4 on 2025-07-13 15:21

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alert_id", models.CharField(max_length=50, unique=True)),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("inventory", "Inventory"),
                            ("anomaly", "Anomaly"),
                            ("security", "Security"),
                            ("performance", "Performance"),
                            ("data_quality", "Data Quality"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("acknowledged", "Acknowledged"),
                            ("resolved", "Resolved"),
                            ("ignored", "Ignored"),
                        ],
                        default="active",
                        max_length=15,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("source", models.CharField(max_length=100)),
                ("entity_type", models.CharField(blank=True, max_length=50)),
                ("entity_id", models.CharField(blank=True, max_length=100)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("acknowledged_by", models.CharField(blank=True, max_length=100)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_by", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "db_table": "alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnomalyDetection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("detection_id", models.CharField(max_length=50, unique=True)),
                (
                    "anomaly_type",
                    models.CharField(
                        choices=[
                            ("volume", "Volume-based"),
                            ("time", "Time-based"),
                            ("location", "Location-based"),
                            ("pattern", "Pattern-based"),
                            ("threshold", "Threshold-based"),
                        ],
                        max_length=20,
                    ),
                ),
                ("entity_type", models.CharField(max_length=50)),
                ("entity_id", models.CharField(max_length=100)),
                (
                    "anomaly_score",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                ("threshold", models.DecimalField(decimal_places=2, max_digits=5)),
                ("details", models.JSONField(default=dict)),
                ("is_confirmed", models.BooleanField(default=False)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "anomaly_detections",
                "ordering": ["-detected_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("log_id", models.CharField(max_length=50, unique=True)),
                ("user", models.CharField(max_length=100)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("view", "View"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                        ],
                        max_length=20,
                    ),
                ),
                ("entity_type", models.CharField(max_length=50)),
                ("entity_id", models.CharField(blank=True, max_length=100)),
                ("old_values", models.JSONField(blank=True, default=dict)),
                ("new_values", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "audit_logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"], name="audit_logs_user_86f4d4_idx"
                    ),
                    models.Index(
                        fields=["entity_type", "timestamp"],
                        name="audit_logs_entity__11a78e_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="audit_logs_action_474804_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Metric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric_name", models.CharField(max_length=100)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("operational", "Operational"),
                            ("business", "Business"),
                            ("quality", "Quality"),
                            ("performance", "Performance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=15)),
                ("unit", models.CharField(blank=True, max_length=50)),
                ("dimensions", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "metrics",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["metric_name", "timestamp"],
                        name="metrics_metric__3f49f2_idx",
                    ),
                    models.Index(
                        fields=["metric_type", "timestamp"],
                        name="metrics_metric__ef4b5a_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_id", models.CharField(max_length=50, unique=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        max_length=20,
                    ),
                ),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("total_transactions", models.PositiveIntegerField(default=0)),
                ("stock_in_count", models.PositiveIntegerField(default=0)),
                ("stock_out_count", models.PositiveIntegerField(default=0)),
                ("adjustment_count", models.PositiveIntegerField(default=0)),
                ("transfer_count", models.PositiveIntegerField(default=0)),
                ("orders_created", models.PositiveIntegerField(default=0)),
                ("orders_completed", models.PositiveIntegerField(default=0)),
                ("orders_cancelled", models.PositiveIntegerField(default=0)),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("shipments_created", models.PositiveIntegerField(default=0)),
                ("shipments_delivered", models.PositiveIntegerField(default=0)),
                (
                    "average_delivery_days",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "success_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                (
                    "error_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                ("anomalies_detected", models.PositiveIntegerField(default=0)),
                ("critical_anomalies", models.PositiveIntegerField(default=0)),
                ("additional_metrics", models.JSONField(blank=True, default=dict)),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                ("generated_by", models.CharField(default="system", max_length=100)),
            ],
            options={
                "db_table": "performance_reports",
                "ordering": ["-generated_at"],
                "unique_together": {("report_type", "period_start", "period_end")},
            },
        ),
    ]
