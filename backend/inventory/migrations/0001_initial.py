# Generated by Django 5.2.4 on 2025-07-13 15:21

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Electronics", "Electronics"),
                            ("Clothing", "Clothing"),
                            ("Food", "Food"),
                            ("Tools", "Tools"),
                            ("Books", "Books"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "categories",
                "db_table": "categories",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=20, unique=True)),
                (
                    "zone",
                    models.CharField(
                        choices=[
                            ("A", "Zone A"),
                            ("B", "Zone B"),
                            ("C", "Zone C"),
                            ("D", "Zone D"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("storage", "Storage"),
                            ("picking", "Picking"),
                            ("shipping", "Shipping"),
                            ("receiving", "Receiving"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "capacity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("current_utilization", models.PositiveIntegerField(default=0)),
                ("temperature_controlled", models.BooleanField(default=False)),
                ("automated", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "locations",
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("contact_info", models.TextField(blank=True)),
                ("country", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "suppliers",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.001"))
                        ],
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(help_text="LxWxH in cm", max_length=100),
                ),
                ("is_perishable", models.BooleanField(default=False)),
                ("is_high_value", models.BooleanField(default=False)),
                ("reorder_point", models.PositiveIntegerField(default=0)),
                ("max_stock_level", models.PositiveIntegerField(default=1000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory.category",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory.supplier",
                    ),
                ),
            ],
            options={
                "db_table": "items",
            },
        ),
        migrations.CreateModel(
            name="InventoryMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("stock_in", "Stock In"),
                            ("stock_out", "Stock Out"),
                            ("adjustment", "Adjustment"),
                            ("transfer", "Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("previous_quantity", models.IntegerField()),
                ("new_quantity", models.IntegerField()),
                (
                    "reference_id",
                    models.CharField(
                        blank=True,
                        help_text="Order ID, Transfer ID, etc.",
                        max_length=100,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("user", models.CharField(blank=True, max_length=100)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_business_hours", models.BooleanField(default=True)),
                ("shift", models.CharField(blank=True, max_length=20)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="inventory.location",
                    ),
                ),
            ],
            options={
                "db_table": "inventory_movements",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="StockLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_levels",
                        to="inventory.item",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_levels",
                        to="inventory.location",
                    ),
                ),
            ],
            options={
                "db_table": "stock_levels",
                "unique_together": {("item", "location")},
            },
        ),
    ]
