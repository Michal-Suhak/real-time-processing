# Generated by Django 5.2.4 on 2025-07-13 15:21

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orders", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Carrier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("api_endpoint", models.URLField(blank=True)),
                (
                    "tracking_url_template",
                    models.CharField(
                        blank=True,
                        help_text="Use {tracking_number} placeholder",
                        max_length=500,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "carriers",
            },
        ),
        migrations.CreateModel(
            name="Shipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shipment_id", models.CharField(max_length=50, unique=True)),
                ("tracking_number", models.CharField(max_length=100, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("picked_up", "Picked Up"),
                            ("in_transit", "In Transit"),
                            ("out_for_delivery", "Out for Delivery"),
                            ("delivered", "Delivered"),
                            ("failed_delivery", "Failed Delivery"),
                            ("returned", "Returned"),
                            ("lost", "Lost"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("standard", "Standard"),
                            ("expedited", "Expedited"),
                            ("next_day", "Next Day"),
                            ("same_day", "Same Day"),
                        ],
                        default="standard",
                        max_length=15,
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.001"))
                        ],
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(help_text="LxWxH in cm", max_length=100),
                ),
                ("origin_address", models.TextField()),
                ("destination_address", models.TextField()),
                ("destination_country", models.CharField(max_length=100)),
                ("destination_postal_code", models.CharField(max_length=20)),
                ("shipped_date", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_delivery_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("actual_delivery_date", models.DateTimeField(blank=True, null=True)),
                ("signature_required", models.BooleanField(default=False)),
                (
                    "insurance_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("special_instructions", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "carrier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="shipments.carrier",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="shipments",
                        to="orders.order",
                    ),
                ),
            ],
            options={
                "db_table": "shipments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ShipmentStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_status", models.CharField(blank=True, max_length=20)),
                ("to_status", models.CharField(max_length=20)),
                ("location", models.CharField(blank=True, max_length=255)),
                ("notes", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "source",
                    models.CharField(
                        default="manual",
                        help_text="manual, api, webhook",
                        max_length=50,
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="shipments.shipment",
                    ),
                ),
            ],
            options={
                "db_table": "shipment_status_history",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attempt_number", models.PositiveIntegerField()),
                ("attempt_date", models.DateTimeField()),
                (
                    "outcome",
                    models.CharField(
                        choices=[
                            ("successful", "Successful"),
                            ("failed_no_one_home", "Failed - No One Home"),
                            ("failed_refused", "Failed - Refused"),
                            ("failed_address_issue", "Failed - Address Issue"),
                            ("failed_other", "Failed - Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("signature", models.CharField(blank=True, max_length=255)),
                ("photo_proof_url", models.URLField(blank=True)),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_attempts",
                        to="shipments.shipment",
                    ),
                ),
            ],
            options={
                "db_table": "delivery_attempts",
                "ordering": ["attempt_number"],
                "unique_together": {("shipment", "attempt_number")},
            },
        ),
        migrations.CreateModel(
            name="ShipmentItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_shipped",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "order_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="orders.orderitem",
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipment_items",
                        to="shipments.shipment",
                    ),
                ),
            ],
            options={
                "db_table": "shipment_items",
                "unique_together": {("shipment", "order_item")},
            },
        ),
    ]
